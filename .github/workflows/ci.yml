name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run Rubocop
        run: bin/rubocop -f github

      - name: Run Brakeman
        run: bundle exec brakeman -q --no-exit-on-error --exit-on-warn --ensure-latest

      - name: Run RSpec tests
        run: bundle exec rspec --format progress

  rspec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Brakeman is a static analysis tool which checks Ruby on Rails applications for security vulnerabilities
        run: bundle exec rspec

  build:
    runs-on: ubuntu-latest
    needs: [lint, brakeman]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Private Docker Registry
      run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.REGISTRY_URL }}/neoflowbot-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Add SSH key
      id: ssh-key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

    - name: Copy docker-compose.yml to VPS
      run: scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/${{ secrets.VPS_USER }}/neoflowbot-backend/

    - name: Create .env file on VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo '${{ secrets.ENV_FILE }}' > /${{ secrets.VPS_USER }}/neoflowbot-backend/.env"
  
  post-deploy:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Add SSH key
      id: ssh-key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

    - name: Docker login on VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        EOF

    - name: Deploy to VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd /${{ secrets.VPS_USER }}/neoflowbot-backend
          docker-compose pull
          docker-compose up -d
          docker images --filter "dangling=true" -q --no-trunc | xargs -r docker rmi
        EOF
