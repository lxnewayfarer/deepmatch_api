version: '3'
services:
  elasticsearch:
    image: elasticsearch:8.17.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic
    deploy:
      resources:
        limits:
          memory: 1200M


  postgres:
    restart: always
    image: postgres:16
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    restart: "no"
    image: ${REGISTRY_URL}/inflowbot-backend:latest
    command: bash -c "rm -f tmp/pids/server.pid && RAILS_ENV=production bundle exec rails db:prepare && RAILS_ENV=production bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - uploads:/inflowbot-backend/public/uploads
    env_file: .env
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - postgres

  redis:
    image: redis:latest
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  sidekiq:
    image: ${REGISTRY_URL}/inflowbot-backend:latest
    command: bundle exec sidekiq -C config/sidekiq.yml
    env_file: .env
    depends_on:
      - postgres
      - redis
    volumes:
      - uploads:/inflowbot-backend/public/uploads

volumes:
  postgres_data:
  uploads:
  elasticsearch_data:
    driver: local

networks:
  elastic:
    driver: bridge