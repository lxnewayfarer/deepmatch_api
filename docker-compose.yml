version: '3'
services:
  # elasticsearch:
  #     image: elasticsearch:8.17.3
  #     container_name: elasticsearch
  #     environment:
  #       - discovery.type=single-node
  #       - xpack.security.enabled=false
  #       - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #     volumes:
  #       - es_data:/usr/share/elasticsearch/data
  #     ports:
  #       - "9200:9200"
  #     deploy:
  #       resources:
  #         limits:
  #           memory: 900M

  postgres:
    restart: always
    image: postgres:16
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    restart: "no"
    image: ${REGISTRY_URL}/rails_api_template-backend:latest
    command: bash -c "rm -f tmp/pids/server.pid && RAILS_ENV=production bundle exec rails db:prepare && RAILS_ENV=production bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - uploads:/rails_api_template-backend/public/uploads
    env_file: .env
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - postgres

  redis:
    image: redis:latest
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  sidekiq:
    image: ${REGISTRY_URL}/rails_api_template-backend:latest
    command: bundle exec sidekiq -C config/sidekiq.yml -e production
    env_file: .env
    depends_on:
      - postgres
      - redis
    volumes:
      - uploads:/rails_api_template-backend/public/uploads

volumes:
  postgres_data:
  uploads:
  es_data:
